services:
  postgres:
    image: postgres:14
    container_name: 'postgres'
    build:
      context: ./docker
      dockerfile: Dockerfile-Postgres
    ports:
      - 5432:5432
    environment:
      POSTGRES_MULTIPLE_DATABASES: db_teste,db_teste2
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: root
      POSTGRES_INITDB: |
        sed -i -e 's/max_connections.*/max_connections = 5000/' /var/lib/postgresql/data/postgresql.conf
        sed -i -e 's/#log_min_duration_statement = .*/log_min_duration_statement = 0/' /var/lib/postgresql/data/postgresql.conf
    volumes:
      - lampp-postgres:/var/lib/postgresql/data/
    stdin_open: true
    networks:
      - network

  mariadb:
    image: mariadb
    container_name: 'mariadb'
    build:
      context: ./docker
      dockerfile: Dockerfile-Mariadb
    restart: always
    environment:
      MARIADB_MULTIPLE_DATABASES: db_teste,db_teste2
      MARIADB_USER: mariadb
      MARIADB_PASSWORD: root
      MARIADB_ROOT_PASSWORD: root
    volumes:
      - lampp-mysql:/var/lib/mysql
    ports:
      - "3306:3306"
    stdin_open: true
    networks:
      - network
      
  redis:
    image: 'redis:alpine'
    container_name: 'redis'
    ports:
        - '${FORWARD_REDIS_PORT:-6379}:6379'
    volumes:
        - 'lampp-redis:/data'
    networks:
        - network
    healthcheck:
        test:
            - CMD
            - redis-cli
            - ping
        retries: 3
        timeout: 5s           

  mailhog:
    image: 'mailhog/mailhog:latest'
    container_name: 'mailhog'
    logging:
      driver: 'none'  # disable saving logs
    ports:
      - 1025:1025 # port smtp
      - 8025:8025 # port web
    networks:
      - network

  mailpit:
    image: 'axllent/mailpit:latest'
    container_name: 'mailpit'
    ports:
        - '1026:1025'
        - '8026:8025'
    networks:
        - network

  soketi:
    image: 'quay.io/soketi/soketi:latest-16-alpine'
    container_name: 'soketi'
    environment:
        SOKETI_DEBUG: '${SOKETI_DEBUG:-1}'
        SOKETI_METRICS_SERVER_PORT: '9601'
        SOKETI_DEFAULT_APP_ID: '${PUSHER_APP_ID}'
        SOKETI_DEFAULT_APP_KEY: '${PUSHER_APP_KEY}'
        SOKETI_DEFAULT_APP_SECRET: '${PUSHER_APP_SECRET}'
    ports:
        - '${PUSHER_PORT:-6001}:6001'
        - '${PUSHER_METRICS_PORT:-9601}:9601'
    networks:
        - network

  minio:
    image: 'minio/minio:latest'
    container_name: 'minio'
    ports:
        - '${FORWARD_MINIO_PORT:-9000}:9000'
        - '${FORWARD_MINIO_CONSOLE_PORT:-8900}:8900'
    environment:
        MINIO_ROOT_USER: sail
        MINIO_ROOT_PASSWORD: password
    volumes:
        - 'lampp-minio:/data/minio'
    networks:
        - network
    command: 'minio server /data/minio --console-address ":8900"'
    healthcheck:
        test:
            - CMD
            - curl
            - '-f'
            - 'http://localhost:9000/minio/health/live'
        retries: 3
        timeout: 5s

  projects:
    image: php:8.1-apache
    container_name: 'projects'
    build:
      context: ./docker
      dockerfile: Dockerfile
      args:
        uid: 1000
        NODE_VERSION: '14.21.3'
    environment:
      - APACHE_RUN_USER=#1000
      - APACHE_RUN_GROUP=#1000
    ports:
      - '80:80'
    volumes:
      - './projects:/var/www'
      - './docker/hosts:/etc/hosts'
      - './docker/lamp:/usr/local/bin/lamp'
      - './docker/apache/conf/dir.conf:/etc/apache2/mods-enabled/dir.conf'
      - './docker/apache/sites:/etc/apache2/sites-available'
      - './docker/apache/sites:/etc/apache2/sites-enabled'
    depends_on:
      - postgres
      - mariadb
      - redis
      - mailhog
      - mailpit
      - soketi
      - minio
    links:
      - postgres
      - mariadb
      - redis
      - mailhog
      - mailpit
      - soketi
      - minio
    networks:
      - network
    
networks:
  network:
    driver: bridge

volumes:
  lampp-postgres:
        driver: local
  lampp-mysql:  
        driver: local
  lampp-redis:
      driver: local
  lampp-minio:
      driver: local
